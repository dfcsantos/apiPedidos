services:

   apipedidos: # nome do serviço
     container_name: api-pedidos-springboot # nome do container
     build:
       context: . # Caminho do diretório onde está o Dockerfile
       dockerfile: Dockerfile # Nome do arquivo Dockerfile
     ports:
       - "8081:8081" #porta externa / interna
     networks:
       - apipedidos-network # rede compartilhada
     depends_on: # Dependências do serviço
       - postgres # Espera o serviço postgres iniciar antes de iniciar o serviço apipedidos
     environment: # Variáveis de ambiente
        SPRING_PROFILES_ACTIVE: docker 	
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bd_pedidos # URL do banco de dados
        SPRING_DATASOURCE_USERNAME: usuario_apipedidos # Usuário do banco de dados
        SPRING_DATASOURCE_PASSWORD: senha_apipedidos # Senha do banco de dados
        SPRING_JPA_HIBERNATE_DDL_AUTO: update # Configuração do Hibernate para atualizar o esquema do banco de dados
        SPRING_JPA_SHOW_SQL: true # Exibir as consultas SQL no console  
   
   postgres:
     image: postgres:16 	
     container_name: apiPedidos-postgresql
     restart: always #sempre reiniciar o container quando parar
     environment:
       POSTGRES_USER: usuario_apipedidos
       POSTGRES_PASSWORD: senha_apipedidos
       POSTGRES_DB: bd_pedidos
     ports:
       - "5436:5432" # Porta externa para a máquina / porta interna do container
     volumes:
       - .postgres_data:/var/lib/postgresql/data #Local detron do container para armazenar os dados
     networks:
       - apipedidos-network # rede compartilhada

volumes:
   postgres_data: #Resgistrando o volume para armazenar os dados
   
networks: 
   apipedidos-network: # Registrando a rede para o serviço
     driver: bridge # Tipo de rede compartilhada
     
   